<jittershader name="default">
	<description>Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="textureMatrix0" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="texcoord" type="vec2" state="TEXCOORD" />
	<param name="off" type="float" default="0.0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="textureMatrix0" program="vp" />
		<bind param="texcoord" program="vp" />
		<bind param="off" program="fp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 texcoord;
out jit_PerVertex {
	vec2 texcoord;
} jit_out;
uniform mat4 textureMatrix0;

void main(void) {
	gl_Position = vec4(texcoord*2 - 1, 0., 1.);
	jit_out.texcoord = vec2(textureMatrix0*vec4(texcoord, 0., 1.));

}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

in jit_PerVertex {
	vec2 texcoord;
} jit_in;
layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform float off;


vec4 sample_neighbor(){

	return 	floor(mod(jit_in.texcoord.x, 2) + off) == 0 ? 	
			texelFetch(tex0, ivec2(jit_in.texcoord + vec2(1,0))) : 
			texelFetch(tex0, ivec2(jit_in.texcoord - vec2(1,0)));
}

void main(void) {

	vec4 this_sample = texelFetch(tex0, ivec2(jit_in.texcoord));
	vec4 nei_sample = sample_neighbor();

	if(floor(mod(jit_in.texcoord.x, 2) + 1) == 0){
		outColor = 	(this_sample.r + this_sample.g + this_sample.b) > (nei_sample.r + nei_sample.g + nei_sample.b) ?
					this_sample : nei_sample;	
	} else {
		outColor = 	(this_sample.r + this_sample.g + this_sample.b) < (nei_sample.r + nei_sample.g + nei_sample.b) ?
					this_sample : nei_sample;
	}

}
]]>
</program>
</language>
</jittershader>
