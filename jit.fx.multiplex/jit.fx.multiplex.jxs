<jittershader name="default">
	<description>Default Slab </description>
	<param name="dummyTex" type="int" default="0" />
	<param name="texA" type="int" default="1" />
	<param name="texB" type="int" default="2" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="multiplexdim" type="int" default="0" />
	<language name="glsl" version="1.5">
		<bind param="dummyTex" program="fp" />
		<bind param="texA" program="fp" />
		<bind param="texB" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="multiplexdim" program="fp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 uv;
uniform mat4 texMat;

out jit_PerVertex {
	vec2 uv;
} jit_out;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0, 1);
	jit_out.uv = (texMat * vec4(uv,0,1)).xy;
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

layout (location = 0) out vec4 outColor;

uniform samplerJit0 dummyTex, texA, texB;
uniform int multiplexdim;

in jit_PerVertex {
	vec2 uv;
} jit_in;

void main(void) {

	if(multiplexdim == 0){
		ivec2 iuv = ivec2(floor(jit_in.uv/vec2(2, 1)));
		bool choose = mod(floor(jit_in.uv.x), 2) == 0;
		outColor = choose ? texelFetch(texA, iuv) : texelFetch(texB, iuv);
	} else {
		ivec2 iuv = ivec2(floor(jit_in.uv/vec2(1, 2)));
		bool choose = mod(floor(jit_in.uv.y), 2) == 0;
		outColor = choose ? texelFetch(texA, iuv) : texelFetch(texB, iuv);
	}
}
]]>
</program>
</language>
</jittershader>
