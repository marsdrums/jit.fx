<jittershader name="default">
	<description>Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="splitpoint" type="float" default="50" />
	<param name="ratio" type="float" default="1." />
	<param name="texDim" type="vec2" default="TEXDIM0" />
	<param name="splitdim" type="int" default="0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="splitpoint" program="vp" />
		<bind param="ratio" program="vp" />
		<bind param="texDim" program="vp" />
		<bind param="splitdim" program="vp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 uv;
uniform mat4 texMat;
uniform float splitpoint, ratio;
uniform vec2 texDim;
uniform int splitdim;

out jit_PerVertex {
	vec2 uv;
} jit_out;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0, 1);
	vec2 stretchedUV = splitdim == 0 ?	vec2(uv.x * ratio + 1 - ratio, uv.y) :
										vec2(uv.x, uv.y * ratio + 1 - ratio);

	jit_out.uv = (texMat * vec4(stretchedUV,0,1)).xy;
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core


layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;

in jit_PerVertex {
	vec2 uv;
} jit_in;

void main(void) {

	outColor = texelFetch(tex0, ivec2(jit_in.uv));
}
]]>
</program>
</language>
</jittershader>
