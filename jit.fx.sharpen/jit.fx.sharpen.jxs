<jittershader name="default">
	<description>Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="texMat" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="sharpness" type="float" default="0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="uv" program="vp" />
		<bind param="texMat" program="vp" />
		<bind param="sharpness" program="fp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core

in vec2 uv;
uniform mat4 texMat;

out jit_PerVertex {
	vec2 uv;
} jit_out;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0, 1);
	jit_out.uv = (texMat * vec4(uv,0,1)).xy;
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core


layout (location = 0) out vec4 outColor;

uniform samplerJit0 tex0;
uniform float sharpness;

in jit_PerVertex {
	vec2 uv;
} jit_in;

void main(void) {

	vec4 texA = texture( tex0, jit_in.uv + vec2(-1, -1) * 1.5 );
	vec4 texB = texture( tex0, jit_in.uv + vec2( 1, -1) * 1.5 );
	vec4 texC = texture( tex0, jit_in.uv + vec2(-1,  1) * 1.5 );
	vec4 texD = texture( tex0, jit_in.uv + vec2( 1,  1) * 1.5 );
   
    vec4 around = 0.25 * (texA + texB + texC + texD);
	vec4 center  = texture( tex0, jit_in.uv );
	
	outColor = center + (center - around) * sharpness;

}
]]>
</program>
</language>
</jittershader>
