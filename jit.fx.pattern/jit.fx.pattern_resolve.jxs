<jittershader name="default">
	<description>Default Slab </description>
	<param name="tex0" type="int" default="0" />
	<param name="textureMatrix0" type="mat4" state="TEXTURE0_MATRIX" />
	<param name="uv" type="vec2" state="TEXCOORD" />
	<param name="line_width" type="float" default="1" />
	<param name="line_growth" type="float" default="0.0" />
	<param name="line_fade" type="float" default="0.0" />
	<language name="glsl" version="1.5">
		<bind param="tex0" program="fp" />
		<bind param="textureMatrix0" program="vp" />
		<bind param="uv" program="vp" />
		<bind param="line_width" program="fp" />
		<bind param="line_growth" program="fp" />
		<bind param="line_fade" program="fp" />
		<program name="vp" type="vertex"  >
<![CDATA[
#version 330 core


in vec2 uv;

out jit_PerVertex {
	vec2 uv;
} jit_out;

uniform mat4 textureMatrix0;

void main(void) {
	gl_Position = vec4(uv*2 - 1, 0.0, 1.0);
	jit_out.uv = vec2(textureMatrix0*vec4(uv, 0., 1.));
}
]]>
</program>

<program name="fp" type="fragment"  >
<![CDATA[
#version 330 core

in jit_PerVertex {
	vec2 uv;
} jit_in;
layout (location = 0) out vec4 outColor;

uniform sampler2DRect tex0;
uniform float line_width, line_growth, line_fade;

vec4 draw_lines(){

	float distance = texture(tex0, jit_in.uv).g;

	float a = line_width + distance*line_growth;
	float b = a * 0.7071067812;
	float col = 1 / ( distance * line_fade + 1);

	if( texture(tex0, jit_in.uv - vec2(a,0)).r != texture(tex0, jit_in.uv + vec2(a,0)).r ){
		return vec4(col);
	}
	if( texture(tex0, jit_in.uv - vec2(0,a)).r != texture(tex0, jit_in.uv + vec2(0,a)).r ){
		return vec4(col);
	}
	if( texture(tex0, jit_in.uv - vec2(b,b)).r != texture(tex0, jit_in.uv + vec2(b,b)).r ){
		return vec4(col);
	}
	if( texture(tex0, jit_in.uv - vec2(-b,b)).r != texture(tex0, jit_in.uv + vec2(-b,b)).r ){
		return vec4(col);
	}
	return vec4(0.0);	

}

void main(void) {

	outColor =  draw_lines();
	
}
]]>
</program>
	</language>
</jittershader>
